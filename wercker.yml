services:
  - id: postgres
    tag: 9.6
    env:
      POSTGRES_USER: fider_test
      POSTGRES_PASSWORD: fider_test-pw

build-assets:
  box: node:8.6
  steps:
    - npm-install

    # Lint
    - script:
        name: lint
        code: |
          npm run lint

    # Build
    - script:
        name: build
        code: |
          npm run build

test:
  box: golang:1.9
  base-path: /go/src/github.com/getfider/fider
  steps:
    # Get dependencies
    - script:
        name: get dependencies
        code: |
          go get github.com/joho/godotenv/cmd/godotenv

    # Test the project
    - script:
        name: run test
        code: |
          make test

    # Build the project
    - script:
        name: run build
        code: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 make build

coverage:
  box: golang:1.9
  base-path: /go/src/github.com/getfider/fider
  steps:
    # Get dependencies
    - script:
        name: get dependencies
        code: |
          go get github.com/joho/godotenv/cmd/godotenv
          go get -u github.com/dave/courtney 

    # Publish to codecov.io
    - script:
        name: run coverage
        code: |
          make coverage
          bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN

dockerize:
  box:
    id: alpine
    cmd: /bin/sh
  steps:
    - script:
        name: install apk packages
        code: |
          apk update && apk add ca-certificates

    # Prepare output
    - script:
        name: prepare output
        code: |
          mkdir /app
          cp fider /app
          cp favicon.ico /app
          cp -R migrations/ /app/migrations
          cp -R views/ /app/views
          cp -R dist/ /app/dist
          rm -rf /pipeline/cache/*
          rm -rf /pipeline/source/* 
          rm -rf /pipeline/source/.git
          rm -rf /pipeline/output/*
          mv /app /pipeline/output

    - internal/docker-push:
        registry: https://registry.hub.docker.com/v2
        repository: getfider/fider
        username: $DOCKER_USER
        password: $DOCKER_PASS
        working-dir: /pipeline/output/app
        tag: latest
        ports: 8080
        cmd: ./fider