version: 2
references:
  builder: &builder 
    getfider/circleci:0.0.9
  workdir: &workdir 
    /go/src/github.com/getfider/fider

  workspace_root: &workspace_root
    /tmp/workspace
    
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

jobs:
  setup:
    docker:
      - image: *builder
    working_directory: *workdir
    steps:
      - checkout
      - restore_cache:
          keys:
            - fider-v1-npm-{{ checksum "package-lock.json" }}
      - run:
          name: npm install
          command: if [ ! -d "./node_modules" ]; then npm ci; fi
      - save_cache:
          name: save node_modules cache
          key: fider-v1-npm-{{ checksum "package-lock.json" }}
          paths:
            - node_modules/
      - save_cache:
          name: save repo cache
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  build:
    docker:
      - image: *builder
    working_directory: *workdir
    steps:
      - *restore_repo
      - run: make lint
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 make build
      - setup_remote_docker
      - run: docker build -t getfider/fider .
      - run: docker save -o ./docker-image.tar getfider/fider
      - persist_to_workspace:
          root: ./
          paths:
            - docker-image.tar

  test-server:
    docker:
      - image: *builder
      - image: postgres:9.6.8
    working_directory: *workdir
    steps:
      - *restore_repo
      - run:
          name: setup postgres
          command: |
            for i in 1 2 3 4 5; do psql -h localhost -p 5432 -U postgres -c "CREATE DATABASE fider_ci" && break || sleep 2; done
            for i in 1 2 3 4 5; do psql -h localhost -p 5432 -U postgres -c "CREATE EXTENSION pg_trgm" -d fider_ci && break || sleep 2; done
            for i in 1 2 3 4 5; do psql -h localhost -p 5432 -U postgres -c "CREATE USER fider_ci WITH PASSWORD 'fider_ci_pw'" && break || sleep 2; done
      - run:
          name: test
          command: |
            mkdir ./dist
            DATABASE_URL=postgres://fider_ci:fider_ci_pw@localhost:5432/fider_ci?sslmode=disable make coverage
            bash <(curl -s https://codecov.io/bash)

  test-ui:
    docker:
      - image: *builder
    working_directory: *workdir
    steps:
      - *restore_repo
      - run:
          name: test
          command: make test-ui

  push:
    docker:
      - image: *builder
    working_directory: *workdir
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run: docker load -i /tmp/workspace/docker-image.tar
      - run:
          name: Set PR number
          command: |
              echo 'export CIRCLE_PR_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"' >> $BASH_ENV
              source $BASH_ENV
              echo $CIRCLE_PR_NUMBER
      - run: 
          name: push image to docker registry
          command: |
            if [ $DOCKER_USER != "" ] && [ $CIRCLE_BRANCH == "master" ] && [[ -z $CI_PULL_REQUEST ]]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag getfider/fider getfider/fider:master
              docker push getfider/fider:master
            fi
            if [ $DOCKER_USER != "" ] && [[ ! -z $CI_PULL_REQUEST ]]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag getfider/fider getfider/fider:PR_$CIRCLE_PR_NUMBER
              docker push getfider/fider:PR_$CIRCLE_PR_NUMBER
            fi

workflows:
  version: 2
  all:
    jobs:
      - setup
      - build:
          requires:
            - setup
      - test-ui:
          requires:
            - setup
      - test-server:
          requires:
            - setup
      - push:
          requires:
            - setup
            - build
            - test-ui
            - test-server